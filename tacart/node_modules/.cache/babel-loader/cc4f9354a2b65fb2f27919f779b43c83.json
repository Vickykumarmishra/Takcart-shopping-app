{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar utils = require('@motionone/utils');\nvar edge = require('./edge.cjs.js');\nvar defaultOffset = [0, 0];\nfunction resolveOffset(offset, containerLength, targetLength, targetInset) {\n  var offsetDefinition = Array.isArray(offset) ? offset : defaultOffset;\n  var targetPoint = 0;\n  var containerPoint = 0;\n  if (utils.isNumber(offset)) {\n    /**\n     * If we're provided offset: [0, 0.5, 1] then each number x should become\n     * [x, x], so we default to the behaviour of mapping 0 => 0 of both target\n     * and container etc.\n     */\n    offsetDefinition = [offset, offset];\n  } else if (utils.isString(offset)) {\n    offset = offset.trim();\n    if (offset.includes(\" \")) {\n      offsetDefinition = offset.split(\" \");\n    } else {\n      /**\n       * If we're provided a definition like \"100px\" then we want to apply\n       * that only to the top of the target point, leaving the container at 0.\n       * Whereas a named offset like \"end\" should be applied to both.\n       */\n      offsetDefinition = [offset, edge.namedEdges[offset] ? offset : \"0\"];\n    }\n  }\n  targetPoint = edge.resolveEdge(offsetDefinition[0], targetLength, targetInset);\n  containerPoint = edge.resolveEdge(offsetDefinition[1], containerLength);\n  return targetPoint - containerPoint;\n}\nexports.resolveOffset = resolveOffset;","map":null,"metadata":{},"sourceType":"script"}